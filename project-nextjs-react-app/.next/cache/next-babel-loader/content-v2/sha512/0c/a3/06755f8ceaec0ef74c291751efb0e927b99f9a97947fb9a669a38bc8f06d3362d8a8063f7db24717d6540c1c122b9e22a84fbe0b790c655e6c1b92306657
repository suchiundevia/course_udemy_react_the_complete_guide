{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/suchiundevia/Documents/course_udemy_react_the_complete_guide/project-nextjs-react-app/pages/[meetupId]/index.js\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport MongoClient from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    alt: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://such:udemy@2021@cluster0.whiju.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetup: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: \"https://thumbs.dreamstime.com/b/auckland-new-zealand-aug-auckland-north-island-new-zealand-august-sunset-view-city-buildings-auckland-new-zealand-aug-201886726.jpg\",\n        title: \"Auckland City\",\n        address: \"123 Auckland\",\n        description: \"First meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/suchiundevia/Documents/course_udemy_react_the_complete_guide/project-nextjs-react-app/pages/[meetupId]/index.js"],"names":["useRouter","React","MeetupDetail","MongoClient","MeetupDetails","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","toString","getStaticProps","context","meetupId","meetupData"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,SAAxB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,GAAG,EAAED,KAAK,CAACE,KAFb;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,8FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AACA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCC,OAAxC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACND,QAAAA,MAAM,EAAEA,MAAM,CAACN,GAAP,CAAWQ,QAAX;AADF;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAeI,QAAhC;AACA,SAAO;AACLxB,IAAAA,KAAK,EAAE;AACLyB,MAAAA,UAAU,EAAE;AACVxB,QAAAA,KAAK,EACH,qKAFQ;AAGVC,QAAAA,KAAK,EAAE,eAHG;AAIVC,QAAAA,OAAO,EAAE,cAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP;AADF,GAAP;AAWD;AAED,eAAeL,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport MongoClient from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      image={props.image}\n      alt={props.title}\n      address={props.address}\n      description={props.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://such:udemy@2021@cluster0.whiju.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetup: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://thumbs.dreamstime.com/b/auckland-new-zealand-aug-auckland-north-island-new-zealand-august-sunset-view-city-buildings-auckland-new-zealand-aug-201886726.jpg\",\n        title: \"Auckland City\",\n        address: \"123 Auckland\",\n        description: \"First meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}